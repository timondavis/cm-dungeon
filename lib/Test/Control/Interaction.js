"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
require("mocha");
var Actor_1 = require("../../Model/Actor");
var D20_Attack_1 = require("../../Model/Ability/d20/D20_Attack");
var Interaction_1 = require("../../Control/Interaction");
var CheckExecutor_1 = require("cm-check/lib/Check/CheckExecutor");
var Effect_1 = require("../../Model/Effect");
describe('Interaction', function () {
    it('should be resolvable having, at a minimum, been generated by a source actor and aimed at a target actor', function () {
        var a = new Actor_1.Actor();
        var b = new Actor_1.Actor();
        a.attributes.add('HP', 10);
        a.attributes.add('Strength', 14);
        a.attributes.add('AC', 1);
        b.attributes.add('HP', 10);
        b.attributes.add('Strength', 14);
        b.attributes.add('AC', 1);
        var attack = new D20_Attack_1.D20_Attack();
        chai_1.expect(a.attributes.get('HP')).to.be.equal(10);
        chai_1.expect(b.attributes.get('HP')).to.be.equal(10);
        a.abilities.add('attack', attack);
        b.abilities.add('attack', attack);
        a.execute('attack', b);
        chai_1.expect(b.attributes.get('HP')).to.be.lessThan(10);
        b.execute('attack', a);
        chai_1.expect(a.attributes.get('HP')).to.be.lessThan(10);
    });
    it('Is ready for use on instantiation', function () {
        var a = new Actor_1.Actor();
        var b = new Actor_1.Actor();
        a.attributes.add('HP', 10);
        b.attributes.add('HP', 10);
        var c = CheckExecutor_1.CheckExecutor.getInstance().generateCheck();
        c.addDie(1, 6);
        c.setTarget(1);
        var i = new Interaction_1.Interaction(a, b, c);
        var e = new Effect_1.Effect();
        e.flagAssignments.add('hit', true);
        i.effects.add(e);
        chai_1.expect(i.execute()).to.be.true;
        chai_1.expect(b.flags.get('hit')).to.be.true;
        chai_1.expect(function () { return a.flags.get('hit'); }).to.throw;
    });
});
//# sourceMappingURL=Interaction.js.map