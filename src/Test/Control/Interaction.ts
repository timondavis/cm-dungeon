import {expect} from 'chai';
import 'mocha';

import {Actor} from "../../Model/Actor";
import {D20_Attack} from "../../Model/Ability/d20/D20_Attack";
import {Interaction} from "../../Control/Interaction";
import {CheckExecutor} from "cm-check/lib/Check/CheckExecutor";
import {Effect} from "../../Model/Effect";

describe( 'Interaction', () => {

    it( 'should be resolvable having, at a minimum, been generated by a source actor and aimed at a target actor', () => {

        let a = new Actor();
        let b = new Actor();

        a.attributes.add( 'HP', 10 );
        a.attributes.add( 'Strength', 14 );
        a.attributes.add( 'AC', 1 );

        b.attributes.add( 'HP', 10 );
        b.attributes.add( 'Strength', 14 );
        b.attributes.add( 'AC', 1 );

        let attack = new D20_Attack();

        expect (a.attributes.get( 'HP' )).to.be.equal(10);
        expect (b.attributes.get( 'HP' )).to.be.equal(10);

        a.abilities.add( 'attack', attack );
        b.abilities.add( 'attack', attack );

        a.execute( 'attack', b );

        expect( b.attributes.get( 'HP' )).to.be.lessThan(10);

        b.execute( 'attack', a );

        expect( a.attributes.get( 'HP' )).to.be.lessThan(10);
    });

    it( 'Is ready for use on instantiation', () => {
        let a = new Actor();
        let b = new Actor();

        a.attributes.add( 'HP', 10 );
        b.attributes.add( 'HP', 10 );

        let c = CheckExecutor.getInstance().generateCheck();
        c.addDie( 1, 6 );
        c.setTarget( 1 );

        let i = new Interaction(a, b, c);
        let e = new Effect();
        e.flagAssignments.add( 'hit', true );
        i.effects.add( e );
        expect( i.execute() ).to.be.true;
        expect( b.flags.get( 'hit' )).to.be.true;
        expect( () => a.flags.get( 'hit' )).to.throw;
    });

    it( 'employs pre-check callbacks')
});